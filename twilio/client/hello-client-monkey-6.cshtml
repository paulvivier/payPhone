@{
// put your Twilio API credentials here
string accountSid = "ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
string authToken = "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy";

// put your Twilio Application Sid here
string appSid = "APzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz";

// put your default Twilio Client name here
string clientName = "jenny";
 
// get the Twilio Client name from the page request parameters, if given
if (Request["client"]!=null) {
    clientName = Request["client"];
}

var capability = new Twilio.TwilioCapability(accountSid, authToken);
capability.AllowClientOutgoing(appSid);
capability.AllowClientIncoming(clientName);
string token = capability.GenerateToken();
} 
 
<!DOCTYPE html>
<html>
  <head>
    <title>Hello Client Monkey 6</title>
    <script type="text/javascript"
      src="http://static.twilio.com/libs/twiliojs/1.0/twilio.min.js"></script>
    <script type="text/javascript"
      src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js">
    </script>
    <link href="http://static0.twilio.com/packages/quickstart/client.css"
      type="text/css" rel="stylesheet" />
    <script type="text/javascript">

        Twilio.Device.setup('@token');

        Twilio.Device.ready(function (device) {
            $("#log").text("Client '@clientName' is ready");
        });

        Twilio.Device.error(function (error) {
            $("#log").text("Error: " + error.message);
        });

        Twilio.Device.connect(function (conn) {
            $("#log").text("Successfully established call");
        });

        Twilio.Device.disconnect(function (conn) {
            $("#log").text("Call ended");
        });

        Twilio.Device.incoming(function (conn) {
            $("#log").text("Incoming connection from " + conn.parameters.From);
            // accept the incoming connection and start two-way audio
            conn.accept();
        });

        Twilio.Device.presence(function (pres) {
            if (pres.available) {
                // create an item for the client that became available
                $("<li>", { id: pres.from, text: pres.from }).click(function () {
                    $("#number").val(pres.from);
                    call();
                }).prependTo("#people");
            }
            else {
                // find the item by client name and remove it
                $("#" + pres.from).remove();
            }
        });

        function call() {
            // get the phone number or client to connect the call to
            params = { "PhoneNumber": $("#number").val() };
            Twilio.Device.connect(params);
        }

        function hangup() {
            Twilio.Device.disconnectAll();
        }
    </script>
  </head>
  <body>
    <button class="call" onclick="call();">
      Call
    </button>
 
    <button class="hangup" onclick="hangup();">
      Hangup
    </button>
 
    <input type="text" id="number" name="number"
      placeholder="Enter a phone number or client to call"/>
 
    <div id="log">Loading pigeons...</div>
 
    <ul id="people"/>
  </body>
</html>